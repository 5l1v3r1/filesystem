
add_executable(filesystem_test filesystem_test.cpp catch.hpp)
target_link_libraries(filesystem_test ghc_filesystem)
target_compile_options(filesystem_test PRIVATE
          $<$<CXX_COMPILER_ID:Clang>:-Wall -Wextra -Werror>
          $<$<CXX_COMPILER_ID:GNU>:-Wall -Werror>
          $<$<CXX_COMPILER_ID:MSVC>:/WX>)
if(CMAKE_CXX_COMPILER_ID MATCHES MSVC)
    target_compile_definitions(filesystem_test PRIVATE _CRT_SECURE_NO_WARNINGS)
endif()
if(CMAKE_GENERATOR STREQUAL Xcode)
    add_executable(filesystem_test_cov filesystem_test.cpp catch.hpp)
    target_compile_options(filesystem_test_cov PRIVATE "$<$<CONFIG:DEBUG>:--coverage>")
    target_link_libraries(filesystem_test_cov PUBLIC ghc_filesystem PRIVATE --coverage)
endif()
add_test(filesystem_test filesystem_test)

if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" AND (CMAKE_CXX_COMPILER_VERSION VERSION_EQUAL 7.0 OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.0))
    if(APPLE)
        include_directories(/usr/local/opt/llvm/include)
        link_directories(/usr/local/opt/llvm/lib)
    endif()
    add_executable(std_filesystem_test filesystem_test.cpp catch.hpp)
    set_property(TARGET std_filesystem_test PROPERTY CXX_STANDARD 17)
    target_compile_definitions(std_filesystem_test PRIVATE USE_STD_FS)
    if(APPLE)
        target_link_libraries(std_filesystem_test -lc++fs)
    else()
        add_compile_options("-stdlib=libc++")
        target_link_libraries(std_filesystem_test -lc++fs)
    endif()
endif()
if (CMAKE_COMPILER_IS_GNUCXX AND (CMAKE_CXX_COMPILER_VERSION VERSION_EQUAL 8.0 OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 8.0))
    add_executable(std_filesystem_test filesystem_test.cpp catch.hpp)
    set_property(TARGET std_filesystem_test PROPERTY CXX_STANDARD 17)
    target_compile_definitions(std_filesystem_test PRIVATE USE_STD_FS)
    target_link_libraries(std_filesystem_test -lstdc++fs)
endif()
if(CMAKE_CXX_COMPILER_ID MATCHES MSVC AND (CMAKE_CXX_COMPILER_VERSION VERSION_EQUAL 19.15 OR CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 19.15))
    add_executable(std_filesystem_test filesystem_test.cpp catch.hpp)
    set_property(TARGET std_filesystem_test PROPERTY CXX_STANDARD 17)
	target_compile_options(std_filesystem_test PRIVATE "/Zc:__cplusplus")
    target_compile_definitions(std_filesystem_test PRIVATE USE_STD_FS _CRT_SECURE_NO_WARNINGS)
endif()

add_executable(multifile_test multi1.cpp multi2.cpp catch.hpp)
target_link_libraries(multifile_test ghc_filesystem)
add_test(multifile_test multifile_test)

add_executable(fwd_impl_test fwd_test.cpp impl_test.cpp)
target_link_libraries(fwd_impl_test ghc_filesystem)
if(CMAKE_CXX_COMPILER_ID MATCHES MSVC)
    target_compile_definitions(fwd_impl_test PRIVATE _CRT_SECURE_NO_WARNINGS)
endif()
add_test(fwd_impl_test fwd_impl_test)
